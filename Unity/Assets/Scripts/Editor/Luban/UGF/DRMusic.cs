//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.UGF
{

public sealed partial class DRMusic :  Bright.Config.EditorBeanBase 
{
    public DRMusic()
    {
            AssetName = "";
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["Id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["AssetName"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  AssetName = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["Volume"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Volume = _fieldJson;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["Id"] = new JSONNumber(Id);
        }
        {

            if (AssetName == null) { throw new System.ArgumentNullException(); }
            _json["AssetName"] = new JSONString(AssetName);
        }
        {
            _json["Volume"] = new JSONNumber(Volume);
        }
    }

    public static DRMusic LoadJsonDRMusic(SimpleJSON.JSONNode _json)
    {
        DRMusic obj = new UGF.DRMusic();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDRMusic(DRMusic _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 音乐编号
    /// </summary>
    public int Id { get; set; }

    /// <summary>
    /// 资源名称
    /// </summary>
    public string AssetName { get; set; }

    /// <summary>
    /// 音量（0~1）
    /// </summary>
    public float Volume { get; set; }

}
}
