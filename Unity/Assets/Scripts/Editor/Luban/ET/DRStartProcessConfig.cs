//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.ET
{

public sealed partial class DRStartProcessConfig :  Bright.Config.EditorBeanBase 
{
    public DRStartProcessConfig()
    {
            StartConfig = "";
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["StartConfig"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  StartConfig = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["Id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["MachineId"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  MachineId = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["InnerPort"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  InnerPort = _fieldJson;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {

            if (StartConfig == null) { throw new System.ArgumentNullException(); }
            _json["StartConfig"] = new JSONString(StartConfig);
        }
        {
            _json["Id"] = new JSONNumber(Id);
        }
        {
            _json["MachineId"] = new JSONNumber(MachineId);
        }
        {
            _json["InnerPort"] = new JSONNumber(InnerPort);
        }
    }

    public static DRStartProcessConfig LoadJsonDRStartProcessConfig(SimpleJSON.JSONNode _json)
    {
        DRStartProcessConfig obj = new ET.DRStartProcessConfig();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDRStartProcessConfig(DRStartProcessConfig _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 开启类型
    /// </summary>
    public string StartConfig { get; set; }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; set; }

    /// <summary>
    /// 所属机器
    /// </summary>
    public int MachineId { get; set; }

    /// <summary>
    /// 内网端口
    /// </summary>
    public int InnerPort { get; set; }

}

}