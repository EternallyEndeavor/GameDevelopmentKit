//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using ET;


namespace cfg
{
   
public partial class DataTables
{
    public UGF.DTUIForm DTUIForm {get; private set; }
    public UGF.DTEntity DTEntity {get; private set; }
    public UGF.DTScene DTScene {get; private set; }
    public UGF.DTSound DTSound {get; private set; }
    public UGF.DTUISound DTUISound {get; private set; }
    public UGF.DTMusic DTMusic {get; private set; }
    public DTDefaultConfig DTDefaultConfig {get; private set; }
    public ET.DTAIConfig DTAIConfig {get; private set; }
    public ET.DTUnitConfig DTUnitConfig {get; private set; }

    public async ETTask LoadAsync(System.Func<string, ETTask<ByteBuf>> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        DTUIForm = new UGF.DTUIForm(await loader("ugf_dtuiform")); 
        tables.Add("UGF.DTUIForm", DTUIForm);
        DTEntity = new UGF.DTEntity(await loader("ugf_dtentity")); 
        tables.Add("UGF.DTEntity", DTEntity);
        DTScene = new UGF.DTScene(await loader("ugf_dtscene")); 
        tables.Add("UGF.DTScene", DTScene);
        DTSound = new UGF.DTSound(await loader("ugf_dtsound")); 
        tables.Add("UGF.DTSound", DTSound);
        DTUISound = new UGF.DTUISound(await loader("ugf_dtuisound")); 
        tables.Add("UGF.DTUISound", DTUISound);
        DTMusic = new UGF.DTMusic(await loader("ugf_dtmusic")); 
        tables.Add("UGF.DTMusic", DTMusic);
        DTDefaultConfig = new DTDefaultConfig(await loader("dtdefaultconfig")); 
        tables.Add("DTDefaultConfig", DTDefaultConfig);
        DTAIConfig = new ET.DTAIConfig(await loader("et_dtaiconfig")); 
        tables.Add("ET.DTAIConfig", DTAIConfig);
        DTUnitConfig = new ET.DTUnitConfig(await loader("et_dtunitconfig")); 
        tables.Add("ET.DTUnitConfig", DTUnitConfig);

        PostInit();
        DTUIForm.Resolve(tables); 
        DTEntity.Resolve(tables); 
        DTScene.Resolve(tables); 
        DTSound.Resolve(tables); 
        DTUISound.Resolve(tables); 
        DTMusic.Resolve(tables); 
        DTDefaultConfig.Resolve(tables); 
        DTAIConfig.Resolve(tables); 
        DTUnitConfig.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        DTUIForm.TranslateText(translator); 
        DTEntity.TranslateText(translator); 
        DTScene.TranslateText(translator); 
        DTSound.TranslateText(translator); 
        DTUISound.TranslateText(translator); 
        DTMusic.TranslateText(translator); 
        DTDefaultConfig.TranslateText(translator); 
        DTAIConfig.TranslateText(translator); 
        DTUnitConfig.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}