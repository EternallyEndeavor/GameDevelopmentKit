
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace ET
{
public partial class DTStartZoneConfig
{
    private readonly Tables _tables;
    public DTStartZoneConfig(Tables tables)
    {
        _tables = tables;
        _dataMapUnion = new System.Collections.Generic.Dictionary<(string, int), DRStartZoneConfig>();
        PostConstructor();
        PostInit();
    }

    private System.Collections.Generic.Dictionary<(string, int), DRStartZoneConfig> _dataMapUnion;
    public System.Collections.Generic.List<(string, int)> KeyList { private set; get; }
    public DRStartZoneConfig Get((string, int) key) => TryGetValue(key, out DRStartZoneConfig v) ? v : null;
    public DRStartZoneConfig Get(string StartConfig, int Id) => Get((StartConfig, Id));

    // partial bool InternalTryGetValue((string, int) key, out DRStartZoneConfig value);
    private bool TryGetValue((string, int) key, out DRStartZoneConfig value)
    {
        if(_dataMapUnion.TryGetValue(key, out value))
        {
            return true;
        }
        if(InternalTryGetValue(key, out value))
        {
            _dataMapUnion.Add(key, value);
            value.Init(_tables);
            return true;
        }
        value = default;
        return false;
    }
    

    partial void PostConstructor();
    partial void PostInit();
}
}
